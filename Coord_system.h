#pragma once
#include "多重计算.h"


//坐标系
class Coord_system
{
public:
	Coord_system();
	~Coord_system();

public:
	矩阵4X4 世界矩阵;
	矩阵4X4 世界逆矩阵;

	向量三维 世界坐标;
	四元数 世界旋转;

	矩阵4X4 变换矩阵;
	向量三维 缩放;
	向量三维 欧拉旋转;
	四元数 四元旋转;
	向量三维 坐标;


protected:
	virtual 矩阵4X4 事件_计算变换矩阵();
	virtual void 事件_计算世界矩阵();

public:
	void 设置变换_世界旋转(四元数 旋转);
	void 设置变换_世界坐标(向量三维 数据);
	void 设置变换_变换矩阵(矩阵4X4 矩阵);
	void 设置变换_坐标(向量三维 数据);
	void 设置变换_欧拉旋转(向量三维 旋转);
	void 设置变换_四元旋转(四元数 旋转);
	void 设置变换_缩放(向量三维 value);

	void 参数刷新();

	void 重置变换();
	void 设置惯性平移(向量三维 平移值);
	void 设置惯性旋转(向量三维 旋转轴, float 弧度);
	void 设置绕世界中心旋转(向量三维 旋转中心, 向量三维 旋转轴, float 弧度);
	void 设置世界平移(向量三维 平移值);
	void 设置世界旋转(向量三维 旋转轴, float 弧度);

private:
	矩阵4X4 _世界矩阵;
	矩阵4X4 _世界逆矩阵;

	向量三维 _世界坐标;
	四元数 _世界旋转;

	矩阵4X4 _变换矩阵;
	向量三维 _缩放;
	向量三维 _欧拉旋转;
	四元数 _四元旋转;
	向量三维 _坐标;
};

